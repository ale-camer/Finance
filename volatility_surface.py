# -*- coding: utf-8 -*-
"""Volatility Surface.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Q_LTOLFHqb_f7FLbCiUlQj3h-tnrG8ho
"""

pip install yahoo_fin

import plotly.graph_objects as go
from yahoo_fin import options
import pandas as pd
import numpy as np
from datetime import datetime
import warnings
warnings.filterwarnings('ignore')

ticker = 'aapl'

dates = options.get_expiration_dates(ticker)
types = ['calls', 'puts']
variables = ['Strike', 'Implied Volatility']

dates2 = dates
for i in range(len(dates)):
  dates2[i] = datetime.strptime(dates[i], '%B %d, %Y')

calls = {}
for call in range(len(dates)):
  calls['call_{0}'.format(call)] = options.get_options_chain(ticker, dates[call])[types[0]][variables]

strikes_c = []
for k in range(len(dates)):
  a = calls['call_{0}'.format(k)][variables[0]]
  strikes_c.append(a)

strikes_c1 = pd.DataFrame(strikes_c).dropna(axis = 1).iloc[len(dates) - 1, :].values

list_c = []

ncol_c = len(dates)
nrow_c = len(strikes_c1)

for j in range(ncol_c):
  for i in range(nrow_c):
    a = calls['call_{0}'.format(j)][calls['call_{0}'.format(j)][variables[0]] == strikes_c1[i]][variables[1]].values
    list_c.append(a)

splits_c = np.array_split(list_c, ncol_c)

dict_c = {}

for a in splits_c:
  dict_c['call__{0}'.format(a)] = a

calls_df = pd.DataFrame(dict_c)
# calls_df.columns = calls.keys()
calls_df.index = strikes_c1

for i in calls_df.columns:
  calls_df[i] = calls_df[i].str.get(0)

calls_df = calls_df.fillna(method = 'ffill').fillna(method = 'bfill')

calls_df.columns = dates2

x = calls_df.columns
y = calls_df.index.values
z = calls_df.values

layout = go.Layout(
            xaxis=go.layout.XAxis(
              title=go.layout.xaxis.Title(
              text='Date')
             ),
             yaxis=go.layout.YAxis(
              title=go.layout.yaxis.Title(
              text='Strike') 
            ) )


fig = go.Figure(data= [go.Surface(z=z, y=y, x=x)], layout=layout )
fig.update_layout(title='Call Implied Volatility Surface',
                  scene = dict(
                    xaxis_title='Date',
                    yaxis_title='Strike',
                    zaxis_title='Implied Volatility'),
                  autosize=False,
                  width=800, height=800,
                  margin=dict(l=65, r=50, b=65, t=90))
fig.show()

puts = {}
for put in range(len(dates)):
  puts['put_{0}'.format(put)] = options.get_options_chain(ticker, dates[put])[types[1]][variables]

strikes_p = []
for k in range(len(dates)):
  a = puts['put_{0}'.format(k)][variables[0]]
  strikes_p.append(a)

strikes_p1 = pd.DataFrame(strikes_p).dropna(axis = 1).iloc[len(dates) - 1, :].values

list_p = []

ncol_p = len(dates)
nrow_p = len(strikes_p1)

for j in range(ncol_p):
  for i in range(nrow_p):
    a = puts['put_{0}'.format(j)][puts['put_{0}'.format(j)][variables[0]] == strikes_p1[i]][variables[1]].values
    list_p.append(a)

splits_p = np.array_split(list_p, ncol_p)

dict_p = {}

for a in splits_p:
  dict_p['put__{0}'.format(a)] = a

puts_df = pd.DataFrame(dict_p)
# puts_df.columns = puts.keys()
puts_df.index = strikes_p1

for i in puts_df.columns:
  puts_df[i] = puts_df[i].str.get(0)

puts_df = puts_df.fillna(method = 'ffill').fillna(method = 'bfill')

puts_df.columns = dates2

x = puts_df.columns
y = puts_df.index.values
z = puts_df.values

layout = go.Layout(
            xaxis=go.layout.XAxis(
              title=go.layout.xaxis.Title(
              text='Date')
             ),
             yaxis=go.layout.YAxis(
              title=go.layout.yaxis.Title(
              text='Strike') 
            ) )


fig = go.Figure(data= [go.Surface(z=z, y=y, x=x)], layout=layout )
fig.update_layout(title='Put Implied Volatility Surface',
                  scene = dict(
                    xaxis_title='Date',
                    yaxis_title='Strike',
                    zaxis_title='Implied Volatility'),
                  autosize=False,
                  width=800, height=800,
                  margin=dict(l=65, r=50, b=65, t=90))
fig.show()